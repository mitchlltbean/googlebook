[{"C:\\Users\\mitch\\code\\googlebook\\client\\src\\index.js":"1","C:\\Users\\mitch\\code\\googlebook\\client\\src\\App.js":"2","C:\\Users\\mitch\\code\\googlebook\\client\\src\\pages\\Search.js":"3","C:\\Users\\mitch\\code\\googlebook\\client\\src\\pages\\Saved.js":"4","C:\\Users\\mitch\\code\\googlebook\\client\\src\\components\\Navbartop.js":"5","C:\\Users\\mitch\\code\\googlebook\\client\\src\\components\\Header.js":"6","C:\\Users\\mitch\\code\\googlebook\\client\\src\\utils\\localhost.js":"7","C:\\Users\\mitch\\code\\googlebook\\client\\src\\components\\Save.js":"8"},{"size":198,"mtime":1614140632678,"results":"9","hashOfConfig":"10"},{"size":441,"mtime":1614245355724,"results":"11","hashOfConfig":"10"},{"size":358,"mtime":1614233685553,"results":"12","hashOfConfig":"10"},{"size":295,"mtime":1614245425996,"results":"13","hashOfConfig":"10"},{"size":1211,"mtime":1614245398712,"results":"14","hashOfConfig":"10"},{"size":4433,"mtime":1614793526789,"results":"15","hashOfConfig":"10"},{"size":61,"mtime":1614162247452,"results":"16","hashOfConfig":"10"},{"size":2994,"mtime":1614654773406,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"u4pmj3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},"C:\\Users\\mitch\\code\\googlebook\\client\\src\\index.js",[],["36","37"],"C:\\Users\\mitch\\code\\googlebook\\client\\src\\App.js",[],"C:\\Users\\mitch\\code\\googlebook\\client\\src\\pages\\Search.js",[],"C:\\Users\\mitch\\code\\googlebook\\client\\src\\pages\\Saved.js",[],"C:\\Users\\mitch\\code\\googlebook\\client\\src\\components\\Navbartop.js",[],"C:\\Users\\mitch\\code\\googlebook\\client\\src\\components\\Header.js",["38","39"],"C:\\Users\\mitch\\code\\googlebook\\client\\src\\utils\\localhost.js",[],"C:\\Users\\mitch\\code\\googlebook\\client\\src\\components\\Save.js",["40"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./save.css\";\r\n\r\nexport default class Save extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      bookData: [],\r\n    };\r\n  }\r\n\r\n  //TODO:create axios call to database with the component did mount function to populate state for books to be .map() on load\r\n  // componentDidMount() {\r\n  //   // debugger\r\n  //   axios({\r\n  //     method: \"GET\",\r\n  //     url: \"to Database\",\r\n  //     withCredentials: true,\r\n  //   })\r\n  //     .then((response) => {\r\n  //       console.log(response.data);\r\n  //       this.setState(bookData);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(\"error\", error);\r\n  //     });\r\n  // }\r\n\r\n  //TODO:create axios call to database to delete the book entry based on its ID, then another call to the dabatabse to refresh the state with the books that a currently in the database.\r\n  // onDelete = (e) => {\r\n  //   e.preventDefault();\r\n  //   console.log(\"hello\");\r\n\r\n  //   axios\r\n  //     .post(url + \"/\", { searchTerm })\r\n  //     .then((result) => {\r\n  //       console.log(result.data.items, \"!!!!!!!\");\r\n  //       console.log(bookData, \"@@@@@@@@@@\");\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err, \"!!!!!!!!\");\r\n  //     });\r\n  // };\r\n\r\n  //TODO: get this handlesubmit to function on click event to deal with deleting\r\n  handleDeleteSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"hello\");\r\n  };\r\n\r\n  //TODO: get this handlesubmit to function on click event to deal with deleting\r\n  handleDeleteSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"hello\");\r\n  };\r\n\r\n  //TODO: handle submit for button click to redirect view to google books\r\n  handleView = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"hello\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"headRes\">\r\n          <h1 style={{ textAlign: \"center\" }}>(React) GOOGLE BOOKS</h1>\r\n          <h2 style={{ textAlign: \"center\" }}>Saved Books</h2>\r\n        </div>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <div className=\"head\">\r\n          {/* //TODO: Get books from database to polulate here using the same .map method as used in header component */}\r\n          <div>Book Here</div>\r\n          {/* TODO:Create a sumbit input to delete this book to DB also handle submit attached to controll button*/}\r\n          <form onSubmit={this.onSubmit}>\r\n            <input\r\n              name=\"save\"\r\n              type=\"submit\"\r\n              value=\"Delete\"\r\n              style={{ width: \"70px\", height: \"30px\" }}\r\n            ></input>\r\n            {/* TODO:Create button that will take them too google books of the current selected book*/}\r\n            <input\r\n              name=\"save\"\r\n              type=\"submit\"\r\n              value=\"View\"\r\n              style={{ width: \"70px\", height: \"30px\" }}\r\n            ></input>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":3,"column":10,"nodeType":"47","messageId":"48","endLine":3,"endColumn":19},{"ruleId":"49","severity":1,"message":"50","line":100,"column":21,"nodeType":"51","endLine":103,"endColumn":22},{"ruleId":"45","severity":1,"message":"52","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":13},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]