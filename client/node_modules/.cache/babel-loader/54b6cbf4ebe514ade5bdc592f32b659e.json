{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitch\\\\code\\\\googlebook\\\\client\\\\src\\\\components\\\\Save.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./save.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Save extends Component {\n  constructor() {\n    super();\n\n    this.handleDeleteSubmit = e => {\n      e.preventDefault();\n      console.log(\"hello\");\n    };\n\n    this.handleDeleteSubmit = e => {\n      e.preventDefault();\n      console.log(\"hello\");\n    };\n\n    this.handleView = e => {\n      e.preventDefault();\n      console.log(\"hello\");\n    };\n\n    this.state = {\n      bookData: []\n    };\n  } //TODO:create axios call to database with the component did mount function to populate state for books to be .map() on load\n  // componentDidMount() {\n  //   // debugger\n  //   axios({\n  //     method: \"GET\",\n  //     url: \"to Database\",\n  //     withCredentials: true,\n  //   })\n  //     .then((response) => {\n  //       console.log(response.data);\n  //       this.setState(bookData);\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"error\", error);\n  //     });\n  // }\n  //TODO:create axios call to database to delete the book entry based on its ID, then another call to the dabatabse to refresh the state with the books that a currently in the database.\n  // onDelete = (e) => {\n  //   e.preventDefault();\n  //   console.log(\"hello\");\n  //   axios\n  //     .post(url + \"/\", { searchTerm })\n  //     .then((result) => {\n  //       console.log(result.data.items, \"!!!!!!!\");\n  //       console.log(bookData, \"@@@@@@@@@@\");\n  //     })\n  //     .catch((err) => {\n  //       console.log(err, \"!!!!!!!!\");\n  //     });\n  // };\n  //TODO: get this handlesubmit to function on click event to deal with deleting\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headRes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"(React) GOOGLE BOOKS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Saved Books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Book Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"save\",\n            type: \"submit\",\n            value: \"Delete\",\n            style: {\n              width: \"70px\",\n              height: \"30px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"save\",\n            type: \"submit\",\n            value: \"View\",\n            style: {\n              width: \"70px\",\n              height: \"30px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mitch/code/googlebook/client/src/components/Save.js"],"names":["React","Component","axios","Save","constructor","handleDeleteSubmit","e","preventDefault","console","log","handleView","state","bookData","render","textAlign","onSubmit","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAC1CG,EAAAA,WAAW,GAAG;AACZ;;AADY,SAyCdC,kBAzCc,GAyCQC,CAAD,IAAO;AAC1BA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KA5Ca;;AAAA,SA+CdJ,kBA/Cc,GA+CQC,CAAD,IAAO;AAC1BA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAlDa;;AAAA,SAqDdC,UArDc,GAqDAJ,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAxDa;;AAEZ,SAAKE,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD,GANyC,CAQ1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAkBAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,KAAK,EAAE;AAAEA,YAAAA,SAAS,EAAE;AAAb,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE;AAAM,UAAA,QAAQ,EAAE,KAAKC,QAArB;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,KAAK,EAAC,QAHR;AAIE,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,MAAT;AAAiBC,cAAAA,MAAM,EAAE;AAAzB;AAJT;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,KAAK,EAAC,MAHR;AAIE,YAAA,KAAK,EAAE;AAAED,cAAAA,KAAK,EAAE,MAAT;AAAiBC,cAAAA,MAAM,EAAE;AAAzB;AAJT;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AA3FyC","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./save.css\";\r\n\r\nexport default class Save extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      bookData: [],\r\n    };\r\n  }\r\n\r\n  //TODO:create axios call to database with the component did mount function to populate state for books to be .map() on load\r\n  // componentDidMount() {\r\n  //   // debugger\r\n  //   axios({\r\n  //     method: \"GET\",\r\n  //     url: \"to Database\",\r\n  //     withCredentials: true,\r\n  //   })\r\n  //     .then((response) => {\r\n  //       console.log(response.data);\r\n  //       this.setState(bookData);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(\"error\", error);\r\n  //     });\r\n  // }\r\n\r\n  //TODO:create axios call to database to delete the book entry based on its ID, then another call to the dabatabse to refresh the state with the books that a currently in the database.\r\n  // onDelete = (e) => {\r\n  //   e.preventDefault();\r\n  //   console.log(\"hello\");\r\n\r\n  //   axios\r\n  //     .post(url + \"/\", { searchTerm })\r\n  //     .then((result) => {\r\n  //       console.log(result.data.items, \"!!!!!!!\");\r\n  //       console.log(bookData, \"@@@@@@@@@@\");\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err, \"!!!!!!!!\");\r\n  //     });\r\n  // };\r\n\r\n  //TODO: get this handlesubmit to function on click event to deal with deleting\r\n  handleDeleteSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"hello\");\r\n  };\r\n\r\n  //TODO: get this handlesubmit to function on click event to deal with deleting\r\n  handleDeleteSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"hello\");\r\n  };\r\n\r\n  //TODO: handle submit for button click to redirect view to google books\r\n  handleView = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"hello\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"headRes\">\r\n          <h1 style={{ textAlign: \"center\" }}>(React) GOOGLE BOOKS</h1>\r\n          <h2 style={{ textAlign: \"center\" }}>Saved Books</h2>\r\n        </div>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <div className=\"head\">\r\n          {/* //TODO: Get books from database to polulate here using the same .map method as used in header component */}\r\n          <div>Book Here</div>\r\n          {/* TODO:Create a sumbit input to delete this book to DB also handle submit attached to controll button*/}\r\n          <form onSubmit={this.onSubmit}>\r\n            <input\r\n              name=\"save\"\r\n              type=\"submit\"\r\n              value=\"Delete\"\r\n              style={{ width: \"70px\", height: \"30px\" }}\r\n            ></input>\r\n            {/* TODO:Create button that will take them too google books of the current selected book*/}\r\n            <input\r\n              name=\"save\"\r\n              type=\"submit\"\r\n              value=\"View\"\r\n              style={{ width: \"70px\", height: \"30px\" }}\r\n            ></input>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}